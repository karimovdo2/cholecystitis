# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# app.py ‚Äì –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –æ–ø—Ä–æ—Å–Ω–∏–∫ —Ä–∏—Å–∫–∞ —Ö–æ–ª–µ—Ü–∏—Å—Ç–∏—Ç–∞
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
import base64, json, pickle, pathlib, warnings

import numpy as np
import pandas as pd
import shap
import streamlit as st
from catboost import CatBoostClassifier
import matplotlib.pyplot as plt

# ‚ñë‚ñë‚ñë‚ñë –±–∞–∑–æ–≤—ã–µ –ø—É—Ç–∏ ‚ñë‚ñë‚ñë‚ñë
THIS_DIR = pathlib.Path(__file__).parent.resolve()
LOGO     = THIS_DIR / "hc_logo.png"

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ SHAP-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç (–æ–ø—Ü.) ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
try:                                 # pip install streamlit-shap
    import streamlit_shap as st_shap
    SHAP_AVAILABLE = True
except ModuleNotFoundError:
    SHAP_AVAILABLE = False

# ‚ñë‚ñë‚ñë‚ñë Streamlit: –∫–æ–Ω—Ñ–∏–≥ –∏ CSS ‚ñë‚ñë‚ñë‚ñë
st.set_page_config(page_title="–ü—Ä–æ–≥–Ω–æ–∑ —Ö–æ–ª–µ—Ü–∏—Å—Ç–∏—Ç–∞",
                   page_icon=None,
                   layout="centered")


st.markdown(
    """
    <style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap');
    html,body,[class*="css"]{font-family:'Inter',sans-serif;}
    body{
      background:linear-gradient(135deg,#6366f1 0%,#7c3aed 50%,#ec4899 100%);
      min-height:100vh;
    }
    section.main > div:first-child{
      background:rgba(255,255,255,0.85);
      backdrop-filter:blur(14px);
      border-radius:1.25rem;
      box-shadow:0 10px 25px rgba(0,0,0,.15);
      padding:2.2rem 3rem;
      margin:2.5rem auto;
      max-width:720px;
    }
    h1.title{font-size:2rem;font-weight:700;text-align:center;margin-bottom:1.4rem;}
    .subtitle{font-size:1.05rem;font-weight:600;margin:1.2rem 0 .3rem;}
    .stButton>button{
      width:100%;height:3rem;border:none;border-radius:.65rem;
      font-weight:600;color:#fff;
      background:linear-gradient(90deg,#6366f1 0%,#7c3aed 100%);
      transition:background .2s;
    }
    .stButton>button:hover{background:#6366f1;}
    </style>
    """,
    unsafe_allow_html=True,
)

# ‚ñë‚ñë‚ñë‚ñë –∑–∞–≥—Ä—É–∑–∫–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ ‚ñë‚ñë‚ñë‚ñë
@st.cache_resource(show_spinner=False)
def load_artifacts():
    model = CatBoostClassifier()
    model.load_model(THIS_DIR / "catboost_gb17.cbm")

    enc_map  = json.loads((THIS_DIR / "enc_map.json").read_text("utf-8"))
    medians  = pickle.loads((THIS_DIR / "medians.pkl").read_bytes())
    explainer = shap.TreeExplainer(model)
    return model, enc_map, medians, explainer

clf, ENC_MAP, MEDIANS, EXPL = load_artifacts()

# ‚ñë‚ñë‚ñë‚ñë —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ (–∫–∞–∫ –≤ –º–æ–¥–µ–ª–∏) ‚ñë‚ñë‚ñë‚ñë
FEATURES = [
    "–°—Ç–µ–ø–µ–Ω—å —Ñ–∏–±—Ä–æ–∑–∞ –ø–æ —ç–ª–∞—Å—Ç–æ–º–µ—Ç—Ä–∏–∏",
    "1 –±–ª–æ–∫ - –ø—Å–∏—Ö–∏—á–µ—Å–∫–∞—è –∏ —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è –Ω–µ –Ω–∞—Ä—É—à–∞–µ—Ç—Å—è",
    "St-index - –∏–Ω–¥–µ–∫—Å —Å—Ç–µ–∞—Ç–æ–∑–∞ ( –≤–æ–∑—Ä–∞—Å—Ç, —Ä–æ—Å—Ç, –æ–∫—Ä—É–∂–Ω–æ—Å—Ç—å —Ç–∞–ª–∏–∏, –°–î)",
    "—ç–∫—Å—Ç–µ—Ä–Ω–∞–ª—å–Ω—ã–π —Ç–∏–ø –ø–∏—â–µ–≤–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è",
    "–ß–∞—Å—Ç–æ—Ç–∞ –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏ 1-2 —Ä–∞–∑–∞ -1, 3 —Ä–∞–∑–∞ -2, 4 –∏ –±–æ–ª–µ–µ —Ä–∞–∑ -3",
    "–ù–∞—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –æ—Ç—è–≥–æ—â–µ–Ω–∞ —É –±–ª–∏–∑–∫–∏—Ö —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ –ø–æ –•–ù–•-1, –ñ–ö–ë-2, —Ü–∏—Ä—Ä–æ–∑ –ø–µ—á–µ–Ω–∏-3, —Ö—Ä.–≥–µ–ø–∞—Ç–∏—Ç-4",
    "–û–î–ê23+",
    "2 –±–ª–æ–∫ - –∏–Ω—Ç—Ä–∞–ø—Å–∏—Ö–∏—á–µ—Å–∫–∞—è –Ω–∞—Ä–ø–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å—Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ –±–æ–ª–µ–∑–Ω—å",
    "–û–±—â–∏–π —Ö–æ–ª–µ—Å—Ç–µ—Ä–∏–Ω",
    "–°—Ç–µ–ø–µ–Ω—å —Å—Ç–µ–∞—Ç–æ–∑–∞ –ø–æ —ç–ª–∞—Å—Ç–æ–º–µ—Ç—Ä–∏–∏",
    "–†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ –¥–∞-1, –Ω–µ—Ç-0",
    "–¢–ì",
    "FIB-4 - –∏–Ω–¥–µ–∫—Å —Ñ–∏–±—Ä–æ–∑–∞ –ø–µ—á–µ–Ω–∏ ( –≤–æ–∑—Ä–∞—Å—Ç, –ê–õ–¢, –ê–°–¢, —Ç—Ä–æ–º–±–æ—Ü–∏—Ç—ã)",
    "HSI - –∏–Ω–¥–µ–∫—Å —Å—Ç–µ–∞—Ç–æ–∑–∞ –ø–µ—á–µ–Ω–∏ ( –ø–æ–ª, –ò–ú–¢, –ê–õ–¢, –ê–°–¢, –°–î)",
    "–ò–ú–¢",
    "–¢—Ä–µ–≤–æ–≥–∞",
    "–ï-—Å–∏–≥–∞—Ä–µ—Ç—ã",
]
CATEGORICAL = {k: list(v.keys()) for k, v in ENC_MAP.items()}

# ‚ñë‚ñë‚ñë‚ñë –≥—Ä–∞–Ω–∏—Ü—ã –¥–ª—è —á–∏—Å–ª–æ–≤—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ ‚ñë‚ñë‚ñë‚ñë   ### CHG
BOUNDS = {
    "–ò–ú–¢":     (10.0, 60.0),
    "–û–±—â–∏–π —Ö–æ–ª–µ—Å—Ç–µ—Ä–∏–Ω": (2.0, 12.0),
    "–¢–ì": (0.0, 7.0),              # CHG
    "FIB-4 - –∏–Ω–¥–µ–∫—Å —Ñ–∏–±—Ä–æ–∑–∞ –ø–µ—á–µ–Ω–∏ ( –≤–æ–∑—Ä–∞—Å—Ç, –ê–õ–¢, –ê–°–¢, —Ç—Ä–æ–º–±–æ—Ü–∏—Ç—ã)": (0.0, 2.0),   # CHG
    "HSI - –∏–Ω–¥–µ–∫—Å —Å—Ç–µ–∞—Ç–æ–∑–∞ –ø–µ—á–µ–Ω–∏ ( –ø–æ–ª, –ò–ú–¢, –ê–õ–¢, –ê–°–¢, –°–î)": (20.0, 40.0),        # CHG
    "–û–î–ê23+": (16.0, 162.0),                                                    # NEW
    "St-index - –∏–Ω–¥–µ–∫—Å —Å—Ç–µ–∞—Ç–æ–∑–∞ ( –≤–æ–∑—Ä–∞—Å—Ç, —Ä–æ—Å—Ç, –æ–∫—Ä—É–∂–Ω–æ—Å—Ç—å —Ç–∞–ª–∏–∏, –°–î)": (-3.2, 51.825), # CHG
    "–°—Ç–µ–ø–µ–Ω—å —Ñ–∏–±—Ä–æ–∑–∞ –ø–æ —ç–ª–∞—Å—Ç–æ–º–µ—Ç—Ä–∏–∏": (0.0, 300.0),                             # CHG
    "–°—Ç–µ–ø–µ–Ω—å —Å—Ç–µ–∞—Ç–æ–∑–∞ –ø–æ —ç–ª–∞—Å—Ç–æ–º–µ—Ç—Ä–∏–∏": (0.0, 300.0),                            # CHG
}

# ‚ñë‚ñë‚ñë‚ñë –ª–æ–≥–æ—Ç–∏–ø ‚ñë‚ñë‚ñë‚ñë
if LOGO.exists():
    img64 = base64.b64encode(LOGO.read_bytes()).decode()
    st.markdown(
        f"<div style='text-align:center;margin-top:1rem;margin-bottom:1rem;'>"
        f"<img src='data:image/png;base64,{img64}' width='500'>"
        f"</div>",
        unsafe_allow_html=True,
    )

# ‚ñë‚ñë‚ñë‚ñë –∑–∞–≥–æ–ª–æ–≤–æ–∫ ‚ñë‚ñë‚ñë‚ñë
st.markdown('<h1 class="title">ü©∫ –û–ø—Ä–æ—Å–Ω–∏–∫ —Ä–∏—Å–∫–∞ —Ö–æ–ª–µ—Ü–∏—Å—Ç–∏—Ç–∞</h1>', unsafe_allow_html=True)

# ‚ñë‚ñë‚ñë‚ñë —Ñ–æ—Ä–º–∞ ‚ñë‚ñë‚ñë‚ñë
form_vals, typed = {}, {}
with st.form("hc_form"):

    # ‚îÄ‚îÄ‚îÄ –¢–û–ë–û–õ ‚Äì —Ç–∏–ø –æ—Ç–Ω–æ—à–µ–Ω–∏—è –∫ –±–æ–ª–µ–∑–Ω–∏ ‚îÄ‚îÄ‚îÄ  ### NEW
    st.markdown("#### –¢–û–ë–û–õ¬†‚Äî —Ç–∏–ø –æ—Ç–Ω–æ—à–µ–Ω–∏—è –∫ –±–æ–ª–µ–∑–Ω–∏")
    cb1 = st.checkbox("1‚ÄØ–±–ª–æ–∫‚ÄØ‚Äì –ø—Å–∏—Ö–∏—á–µ—Å–∫–∞—è –∏ —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è –Ω–µ –Ω–∞—Ä—É—à–∞–µ—Ç—Å—è")
    cb2 = st.checkbox("2‚ÄØ–±–ª–æ–∫‚ÄØ‚Äì –∏–Ω—Ç—Ä–∞–ø—Å–∏—Ö–∏—á–µ—Å–∫–∞—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ –±–æ–ª–µ–∑–Ω—å")
    cb3 = st.checkbox("3‚ÄØ–±–ª–æ–∫‚ÄØ‚Äì –∏–Ω—Ç–µ—Ä–ø—Å–∏—Ö–∏—á–µ—Å–∫–∞—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ –±–æ–ª–µ–∑–Ω—å (–Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –º–æ–¥–µ–ª—å)")

    form_vals["1 –±–ª–æ–∫ - –ø—Å–∏—Ö–∏—á–µ—Å–∫–∞—è –∏ —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è –Ω–µ –Ω–∞—Ä—É—à–∞–µ—Ç—Å—è"] = 1 if cb1 else 0
    form_vals["2 –±–ª–æ–∫ - –∏–Ω—Ç—Ä–∞–ø—Å–∏—Ö–∏—á–µ—Å–∫–∞—è –Ω–∞—Ä–ø–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å—Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ –±–æ–ª–µ–∑–Ω—å"] = 1 if cb2 else 0
    typed["1 –±–ª–æ–∫ - –ø—Å–∏—Ö–∏—á–µ—Å–∫–∞—è –∏ —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è –Ω–µ –Ω–∞—Ä—É—à–∞–µ—Ç—Å—è"] = True
    typed["2 –±–ª–æ–∫ - –∏–Ω—Ç—Ä–∞–ø—Å–∏—Ö–∏—á–µ—Å–∫–∞—è –Ω–∞—Ä–ø–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å—Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ –±–æ–ª–µ–∑–Ω—å"] = True
    # cb3 –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è –≤ –º–æ–¥–µ–ª–∏

    st.markdown("---")

    # ‚îÄ‚îÄ‚îÄ DEBQ ‚Äì —Ç–∏–ø –ø–∏—â–µ–≤–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è ‚îÄ‚îÄ‚îÄ  ### NEW
    st.markdown("#### DEBQ¬†‚Äî —Ç–∏–ø –ø–∏—â–µ–≤–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è")
    debq_col1, debq_col2, debq_col3 = st.columns(3)
    with debq_col1:
        debq_rest = st.checkbox("–û–≥—Ä–∞–Ω–∏—á–∏—Ç–µ–ª—å–Ω—ã–π")
    with debq_col2:
        debq_emot = st.checkbox("–≠–º–æ—Ü–∏–æ–Ω–æ–≥–µ–Ω–Ω—ã–π")
    with debq_col3:
        debq_ext  = st.checkbox("–≠–∫—Å—Ç–µ—Ä–Ω–∞–ª—å–Ω—ã–π")

    # –í –º–æ–¥–µ–ª—å –∏–¥—ë—Ç —Ç–æ–ª—å–∫–æ ¬´—ç–∫—Å—Ç–µ—Ä–Ω–∞–ª—å–Ω—ã–π¬ª
    form_vals["—ç–∫—Å—Ç–µ—Ä–Ω–∞–ª—å–Ω—ã–π —Ç–∏–ø –ø–∏—â–µ–≤–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è"] = 1 if debq_ext else 0
    typed["—ç–∫—Å—Ç–µ—Ä–Ω–∞–ª—å–Ω—ã–π —Ç–∏–ø –ø–∏—â–µ–≤–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è"] = True

    st.markdown("---")

    # ‚îÄ‚îÄ‚îÄ –ù–∞—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å ‚îÄ‚îÄ‚îÄ  ### NEW
    st.markdown("#### –ù–∞—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å (–±–ª–∏–∑–∫–∏–µ —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–∏)")
    inh_col1, inh_col2 = st.columns(2)
    with inh_col1:
        inh_hxh   = st.checkbox("–•–ù–•")
        inh_jkb   = st.checkbox("–ñ–ö–ë")
    with inh_col2:
        inh_cirr  = st.checkbox("–¶–∏—Ä—Ä–æ–∑ –ø–µ—á–µ–Ω–∏")
        inh_hcv   = st.checkbox("–•—Ä–æ–Ω–∏—á–µ—Å–∫–∏–π –≥–µ–ø–∞—Ç–∏—Ç")

    inh_code = 0
    if inh_hxh:   inh_code = 1
    if inh_jkb:   inh_code = 2
    if inh_cirr:  inh_code = 3
    if inh_hcv:   inh_code = 4
    form_vals["–ù–∞—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –æ—Ç—è–≥–æ—â–µ–Ω–∞ —É –±–ª–∏–∑–∫–∏—Ö —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ –ø–æ –•–ù–•-1, –ñ–ö–ë-2, —Ü–∏—Ä—Ä–æ–∑ –ø–µ—á–µ–Ω–∏-3, —Ö—Ä.–≥–µ–ø–∞—Ç–∏—Ç-4"] = inh_code
    typed["–ù–∞—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –æ—Ç—è–≥–æ—â–µ–Ω–∞ —É –±–ª–∏–∑–∫–∏—Ö —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ –ø–æ –•–ù–•-1, –ñ–ö–ë-2, —Ü–∏—Ä—Ä–æ–∑ –ø–µ—á–µ–Ω–∏-3, —Ö—Ä.–≥–µ–ø–∞—Ç–∏—Ç-4"] = True

    st.markdown("---")

    # ‚îÄ‚îÄ‚îÄ –¥–≤–æ–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã ‚îÄ‚îÄ‚îÄ  ### CHG
    bin_qs = {
        "–†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ –¥–∞-1, –Ω–µ—Ç-0":  "–†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ?",
        "–ï-—Å–∏–≥–∞—Ä–µ—Ç—ã":                          "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ e‚Äë—Å–∏–≥–∞—Ä–µ—Ç?",
    }
    for feat, question in bin_qs.items():
        val = st.radio(question, ["–ù–µ—Ç", "–î–∞"], horizontal=True, index=0)
        form_vals[feat] = 1 if val == "–î–∞" else 0
        typed[feat] = True

    st.markdown("---")

    # ‚îÄ‚îÄ‚îÄ –ß–∞—Å—Ç–æ—Ç–∞ –ø—Ä–∏—ë–º–∞ –ø–∏—â–∏ ‚îÄ‚îÄ‚îÄ  ### NEW
    st.markdown("#### –ß–∞—Å—Ç–æ—Ç–∞ –ø—Ä–∏—ë–º–∞ –ø–∏—â–∏")
    freq = st.radio(
        "–°–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –¥–µ–Ω—å –≤—ã –µ–¥–∏—Ç–µ?",
        ("1‚Äì2 —Ä–∞–∑–∞", "3 —Ä–∞–∑–∞", "4 –∏ –±–æ–ª–µ–µ —Ä–∞–∑"),
        horizontal=True,
    )
    freq_map = {"1‚Äì2 —Ä–∞–∑–∞": -1, "3 —Ä–∞–∑–∞": -2, "4 –∏ –±–æ–ª–µ–µ —Ä–∞–∑": -3}
    form_vals["–ß–∞—Å—Ç–æ—Ç–∞ –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏ 1-2 —Ä–∞–∑–∞ -1, 3 —Ä–∞–∑–∞ -2, 4 –∏ –±–æ–ª–µ–µ —Ä–∞–∑ -3"] = freq_map[freq]
    typed["–ß–∞—Å—Ç–æ—Ç–∞ –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏ 1-2 —Ä–∞–∑–∞ -1, 3 —Ä–∞–∑–∞ -2, 4 –∏ –±–æ–ª–µ–µ —Ä–∞–∑ -3"] = True

    st.markdown("---")

    # ‚îÄ‚îÄ‚îÄ –°—Ç–µ–ø–µ–Ω–∏ —Ñ–∏–±—Ä–æ–∑–∞ / —Å—Ç–µ–∞—Ç–æ–∑–∞ —Ä—è–¥–æ–º ‚îÄ‚îÄ‚îÄ  ### NEW
    col_f, col_s = st.columns(2)
    with col_f:
        st.markdown('<div class="subtitle">–°—Ç–µ–ø–µ–Ω—å —Ñ–∏–±—Ä–æ–∑–∞ –ø–æ —ç–ª–∞—Å—Ç–æ–º–µ—Ç—Ä–∏–∏</div>',
                    unsafe_allow_html=True)
        val_fib = st.slider(
            "fib",
            min_value=BOUNDS["–°—Ç–µ–ø–µ–Ω—å —Ñ–∏–±—Ä–æ–∑–∞ –ø–æ —ç–ª–∞—Å—Ç–æ–º–µ—Ç—Ä–∏–∏"][0],
            max_value=BOUNDS["–°—Ç–µ–ø–µ–Ω—å —Ñ–∏–±—Ä–æ–∑–∞ –ø–æ —ç–ª–∞—Å—Ç–æ–º–µ—Ç—Ä–∏–∏"][1],
            value=MEDIANS.get("–°—Ç–µ–ø–µ–Ω—å —Ñ–∏–±—Ä–æ–∑–∞ –ø–æ —ç–ª–∞—Å—Ç–æ–º–µ—Ç—Ä–∏–∏", 0.0),
            step=1.0,
            label_visibility="collapsed",
        )
        form_vals["–°—Ç–µ–ø–µ–Ω—å —Ñ–∏–±—Ä–æ–∑–∞ –ø–æ —ç–ª–∞—Å—Ç–æ–º–µ—Ç—Ä–∏–∏"] = val_fib
        typed["–°—Ç–µ–ø–µ–Ω—å —Ñ–∏–±—Ä–æ–∑–∞ –ø–æ —ç–ª–∞—Å—Ç–æ–º–µ—Ç—Ä–∏–∏"] = True

    with col_s:
        st.markdown('<div class="subtitle">–°—Ç–µ–ø–µ–Ω—å —Å—Ç–µ–∞—Ç–æ–∑–∞ –ø–æ —ç–ª–∞—Å—Ç–æ–º–µ—Ç—Ä–∏–∏</div>',
                    unsafe_allow_html=True)
        val_ste = st.slider(
            "ste",
            min_value=BOUNDS["–°—Ç–µ–ø–µ–Ω—å —Å—Ç–µ–∞—Ç–æ–∑–∞ –ø–æ —ç–ª–∞—Å—Ç–æ–º–µ—Ç—Ä–∏–∏"][0],
            max_value=BOUNDS["–°—Ç–µ–ø–µ–Ω—å —Å—Ç–µ–∞—Ç–æ–∑–∞ –ø–æ —ç–ª–∞—Å—Ç–æ–º–µ—Ç—Ä–∏–∏"][1],
            value=MEDIANS.get("–°—Ç–µ–ø–µ–Ω—å —Å—Ç–µ–∞—Ç–æ–∑–∞ –ø–æ —ç–ª–∞—Å—Ç–æ–º–µ—Ç—Ä–∏–∏", 0.0),
            step=1.0,
            label_visibility="collapsed",
        )
        form_vals["–°—Ç–µ–ø–µ–Ω—å —Å—Ç–µ–∞—Ç–æ–∑–∞ –ø–æ —ç–ª–∞—Å—Ç–æ–º–µ—Ç—Ä–∏–∏"] = val_ste
        typed["–°—Ç–µ–ø–µ–Ω—å —Å—Ç–µ–∞—Ç–æ–∑–∞ –ø–æ —ç–ª–∞—Å—Ç–æ–º–µ—Ç—Ä–∏–∏"] = True

    st.markdown("---")

    # ‚îÄ‚îÄ‚îÄ –û–î–ê23+  (16-162)  ‚Üê--- –î–û–ë–ê–í–¨–¢–ï
    st.markdown('<div class="subtitle">–û–î–ê23+</div>', unsafe_allow_html=True)
    val_oda = st.slider(
        "oda",
        min_value=BOUNDS["–û–î–ê23+"][0],
        max_value=BOUNDS["–û–î–ê23+"][1],
        value=float(MEDIANS.get("–û–î–ê23+", 16.0)),
        step=1.0,
        label_visibility="collapsed",
    )
    form_vals["–û–î–ê23+"] = val_oda
    typed["–û–î–ê23+"] = True

    st.markdown("---")


    # ‚îÄ‚îÄ‚îÄ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ (–ø–æ —Å–ø–∏—Å–∫—É) ‚îÄ‚îÄ‚îÄ
    CUSTOM_HANDLED = {
        "1 –±–ª–æ–∫ - –ø—Å–∏—Ö–∏—á–µ—Å–∫–∞—è –∏ —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è –Ω–µ –Ω–∞—Ä—É—à–∞–µ—Ç—Å—è",
        "2 –±–ª–æ–∫ - –∏–Ω—Ç—Ä–∞–ø—Å–∏—Ö–∏—á–µ—Å–∫–∞—è –Ω–∞—Ä–ø–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å—Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ –±–æ–ª–µ–∑–Ω—å",
        "—ç–∫—Å—Ç–µ—Ä–Ω–∞–ª—å–Ω—ã–π —Ç–∏–ø –ø–∏—â–µ–≤–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è",
        "–ù–∞—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –æ—Ç—è–≥–æ—â–µ–Ω–∞ —É –±–ª–∏–∑–∫–∏—Ö —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ –ø–æ –•–ù–•-1, –ñ–ö–ë-2, —Ü–∏—Ä—Ä–æ–∑ –ø–µ—á–µ–Ω–∏-3, —Ö—Ä.–≥–µ–ø–∞—Ç–∏—Ç-4",
        "–†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ –¥–∞-1, –Ω–µ—Ç-0",
        "–ï-—Å–∏–≥–∞—Ä–µ—Ç—ã",
        "–ß–∞—Å—Ç–æ—Ç–∞ –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏ 1-2 —Ä–∞–∑–∞ -1, 3 —Ä–∞–∑–∞ -2, 4 –∏ –±–æ–ª–µ–µ —Ä–∞–∑ -3",
        "–°—Ç–µ–ø–µ–Ω—å —Ñ–∏–±—Ä–æ–∑–∞ –ø–æ —ç–ª–∞—Å—Ç–æ–º–µ—Ç—Ä–∏–∏",
        "–°—Ç–µ–ø–µ–Ω—å —Å—Ç–µ–∞—Ç–æ–∑–∞ –ø–æ —ç–ª–∞—Å—Ç–æ–º–µ—Ç—Ä–∏–∏",
        "–û–î–ê23+", 
    }

    for f in FEATURES:
        if f in CUSTOM_HANDLED:
            continue
        # –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
        st.markdown(f'<div class="subtitle">{f}</div>', unsafe_allow_html=True)

        # –∫–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã–µ (–∏—Ö –Ω–µ—Ç –ø–æ—Å–ª–µ –∫–∞—Å—Ç–æ–º–æ–≤, –Ω–æ –Ω–∞ –≤—Å—è–∫. —Å–ª—É—á–∞–π)
        if f in CATEGORICAL:
            choice = st.selectbox("–≤—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ", CATEGORICAL[f],
                                  key=f, label_visibility="collapsed")
            form_vals[f] = choice
            typed[f] = True
        else:
            med = float(MEDIANS.get(f, 0.0))
            min_val, max_val = BOUNDS.get(f, (None, None))
            if min_val is None:
                span = max(abs(med), 1.0) * 3
                min_val = med - span
                max_val = med + span
                if med > 0:
                    min_val = max(0.0, min_val)
            val = st.slider(
                "—Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–π—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ",
                min_value=float(min_val),
                max_value=float(max_val),
                value=med,
                step=0.1,
                key=f,
                label_visibility="collapsed",
            )
            form_vals[f] = val
            typed[f] = not np.isclose(val, med)

    submitted = st.form_submit_button("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å")

# ‚ñë‚ñë‚ñë‚ñë —Ä–∞—Å—á—ë—Ç –∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è ‚ñë‚ñë‚ñë‚ñë
if submitted:
    # —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è –º–æ–¥–µ–ª–∏
    row = []
    for f in FEATURES:

        v = form_vals.get(f, MEDIANS.get(f, 0.0))

        # –∫–æ–¥–∏—Ä—É–µ–º –¢–û–õ–¨–ö–û –µ—Å–ª–∏ —ç—Ç–æ —Å—Ç—Ä–æ–∫–æ–≤–∞—è –º–µ—Ç–∫–∞
        if f in ENC_MAP and isinstance(v, str):
            v = ENC_MAP[f][v]

        row.append(v)


    df   = pd.DataFrame([row], columns=FEATURES)
    prob = float(clf.predict_proba(df)[:, 1])

    st.markdown(f"### –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ö–æ–ª–µ—Ü–∏—Å—Ç–∏—Ç–∞: **{prob:.3f}**")
    if prob >= 0.5:
        st.error("üí° –ú–æ–¥–µ–ª—å —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –≤—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫ —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–æ–≥–æ —Ö–æ–ª–µ—Ü–∏—Å—Ç–∏—Ç–∞.")
    else:
        st.success("‚úÖ –ü—Ä–∏–∑–Ω–∞–∫–æ–≤, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã—Ö –¥–ª—è —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–æ–≥–æ —Ö–æ–ª–µ—Ü–∏—Å—Ç–∏—Ç–∞, –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ.")

    # ‚îÄ‚îÄ‚îÄ SHAP ‚îÄ‚îÄ‚îÄ
    shap_values = EXPL(df)

    # –¢–æ–ø‚Äë3 –ø—Ä–∏–∑–Ω–∞–∫–∞
    st.markdown("#### –¢—Ä–∏ –Ω–∞–∏–±–æ–ª–µ–µ –≤–ª–∏—è—é—â–∏—Ö –ø—Ä–∏–∑–Ω–∞–∫–∞")
    top = np.argsort(np.abs(shap_values.values[0]))[::-1][:3]
    for idx in top:
        st.write(f"- **{FEATURES[idx]}** ‚Äî –≤–∫–ª–∞–¥ {shap_values.values[0, idx]:+0.3f}")

    # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π force‚Äëplot
    if SHAP_AVAILABLE:
        st.markdown("#### SHAP‚Äë–≥—Ä–∞—Ñ–∏–∫ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞")
        shap_plot = shap.force_plot(
            EXPL.expected_value,
            shap_values.values[0],
            df.iloc[0],
            matplotlib=False,
        )
        st_shap.st_shap(shap_plot, height=240)
    else:
        st.info("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–∞–∫–µ—Ç `streamlit-shap`, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫.")

    # –ë–∞—Ä‚Äë–ø–ª–æ—Ç —Å —É—á—ë—Ç–æ–º –∑–Ω–∞–∫–∞
    st.markdown("#### –í–∫–ª–∞–¥ –≤—Å–µ—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤")
    vals   = shap_values.values[0]
    order  = np.argsort(np.abs(vals))[::-1]
    colors = ['#e74c3c' if v > 0 else '#1f77b4' for v in vals[order]]

    fig, ax = plt.subplots(figsize=(12, 6))
    ax.barh(np.array(FEATURES)[order], vals[order], color=colors)
    ax.axvline(0, color="#555", linewidth=1)
    ax.invert_yaxis()
    ax.set_xlabel("SHAP value (log‚Äëodds)")
    plt.tight_layout()
    st.pyplot(fig)

# –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π div
st.markdown("</div>", unsafe_allow_html=True)
